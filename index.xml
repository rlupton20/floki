<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>floki</title>
    <link>https://rlupton20.github.io/floki/</link>
    <description>Recent content on floki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Apr 2019 20:22:44 +0100</lastBuildDate>
    
	<atom:link href="https://rlupton20.github.io/floki/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Feature Overview</title>
      <link>https://rlupton20.github.io/floki/intro/feature-overview/</link>
      <pubDate>Sat, 06 Apr 2019 20:22:44 +0100</pubDate>
      
      <guid>https://rlupton20.github.io/floki/intro/feature-overview/</guid>
      <description>floki aims to provide reproducible and shareable build tooling. It does this by helping you run docker containers interactively from a declarative yaml file.
The ideal workflow is
 clone the source repository run floki build  floki has a number of features to help achieve this. The following outlines the current list.
Container images floki offers a couple of ways t configure the container image to use.
Prebuilt images Using a prebuilt image (e.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://rlupton20.github.io/floki/documentation/getting-started/</link>
      <pubDate>Wed, 03 Apr 2019 23:01:31 +0100</pubDate>
      
      <guid>https://rlupton20.github.io/floki/documentation/getting-started/</guid>
      <description>Installation Statically linked binaries are built as part of CI for tags, and can be copied directly onto your system.
Getting started Write a basic configuration file, and name it floki.yaml.
image: debian:latest init: - echo &amp;quot;Welcome to your first floki container!&amp;quot;  In the same directory, run
floki  A container will launch with the working directory mounted, and the container shell located there.
Using a different configuration file You can use a different configuration file with floki by telling it to use a different file from the command line.</description>
    </item>
    
  </channel>
</rss>